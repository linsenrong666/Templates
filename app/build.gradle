apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.linsr.templates"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true
            }
        }
    }
    signingConfigs {
//        debug {
//            keyAlias 'jdsupershops'
//            keyPassword 'jd_supermall'
//            storeFile file('jdsupershops.jks')
//            storePassword 'jd_supermall'
//        }

        release {
            keyAlias 'templates_release'
            keyPassword 'templates123'
            storeFile file('/Users/Moss/Desktop/Android Project/Templates/templates_release.jks')
            storePassword 'templates123'
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        release {
            //是否开启zip优化
            zipAlignEnabled true
            //是否开启混淆
//            minifyEnabled false
            //删除无用资源
//            shrinkResources true
            //正式的签名文件
            signingConfig signingConfigs.release
            //混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        def fileName = 'ymw.apk'
                        if (variant.buildType.name.equals('release')) {
                            fileName = "ymw${defaultConfig.versionName}_${releaseTime()}.apk"
                        } else if (variant.buildType.name.equals('debug')) {
                            fileName = "ymw${defaultConfig.versionName}_${releaseTime()}_debug.apk"
                        }
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
        }

        debug {
            minifyEnabled false
            versionNameSuffix "_debug"
            signingConfig signingConfigs.debug
        }
    }
    //Add the following configuration
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

static def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

repositories {
    flatDir {
        dirs project(':location_lib').file('libs')
    }
}

dependencies {
//    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    //module dependencies
    compile project(':common')
    if (!isModule.toBoolean()) {
        compile project(':main')
        compile project(':books')
        compile project(':login')
    }
}
